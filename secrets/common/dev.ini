[Project]
ProjectName = widget-js
## Parameters for docker development run
## Please be sure that the ports etc. here are consistent with
## ../../frontend/docker/dev/nginx.conf

[DEFAULT]
## fill postgres.* if you're using postgres:
postgres.adr = possu
postgres.port = 5432
postgres.user = myapp_possu
postgres.password = 1234
postgres.database_name = myapp
## use this url if you're using postgres:
# sqlalchemy_url = postgresql://%(postgres.user)s:%(postgres.password)s@%(postgres.adr)s:%(postgres.port)s/%(postgres.database_name)s
## if you're using sqlite instead: "sqlite://" = memfile, "sqlite://filename" = relative path, "sqlite:///path/to/file" = absolute path
sqlalchemy_url = sqlite:////app/sqlite/sqlite.db
# turn all exceptions during db operations into http exceptions: this way program doesn't crash, but HttpException is raised instead
# and backend produces an error message for the frontend - should be enable in production:
exc_to_http_error = True
# your app has an master/admin user named "admin", provide a default password:
admin_user_password = 1234
admin_user_email = admin@somedomain.com

[Uvicorn]
## Backend settings
## Backend is a microservice
## use this like the command-line arguments:
## https://www.uvicorn.org/settings/
host = backend
port = 80
reload = True
#debug = True
#workers = 1
#limit_concurrency = 1000
#limit_max_requests = 1000

[Cors]
use-backend-origins = False
backend-origins = 
    http://localhost, 
    http://localhost:4200, 
    http://localhost:3000, 
    http://localhost:8080

[Postgres]
log_level = debug
# postgres server info
adr = %(postgres.adr)s
port = %(postgres.port)s
# normal postgresql user credentials used by the app:
user = %(postgres.user)s
password = %(postgres.password)s
database_name = %(postgres.database_name)s
# postgresql master user `postgres` password:
root_password = 1234

[alembic]
## for full alembic options, please see: https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file
# path to migration scripts
script_location = alembic
sqlalchemy.url = %(sqlalchemy_url)s

## **ALEMBIC NEEDS THE FOLLOWING SECTIONS TO WORK** https://github.com/sqlalchemy/alembic/issues/985
## Logging configuration
## in theory, we should be able to just set a handler to "root" & redirect all other loggers into root
## but in practice somebody has perverted this and now each logger requires a separate handler - if you don't define it
## configParser goes sour
[loggers]
keys = root,main,uvicorn,sqlalchemy,alembic,test_route,user_route

[handlers]
keys = console

[formatters]
keys = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

# loggers

[logger_root]
level = INFO
handlers = console
qualname = root

[logger_main]
level = INFO
handlers = console
qualname = main
propagate = 0

[logger_uvicorn]
level = INFO
handlers = console
qualname = uvicorn.error
propagate = 0

[logger_sqlalchemy]
level = WARN
handlers = console
qualname = sqlalchemy.engine
propagate = 0

[logger_alembic]
level = INFO
handlers = console
qualname = alembic
propagate = 0

# loggers as per route

[logger_test_route]
level = INFO
handlers = console
qualname = test_route
propagate = 0

[logger_user_route]
level = DEBUG
handlers = console
qualname = user_route
propagate = 0
